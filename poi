ファイル kuma.cgi と KUMA2.CGI を比較しています
***** kuma.cgi
    "set_village"   => "譚醍匳骭ｲ",
    );
***** KUMA2.CGI
    "set_village"   => "譚醍匳骭ｲ",
    "set_grid"      => "騾∽ｻ伜・逋ｻ骭ｲ",
    );
*****

***** kuma.cgi
my $fakevil    = "fakevil";
my $fakeart    = "fakeart";
#
***** KUMA2.CGI
my $fakevil    = "fakevil";
#
*****

***** kuma.cgi
    $fakevil    => "create table fakevil    (id serial, fs int, vid int, enabled int, note varchar(64), ts timestamp);",
    $fakeart    => "create table fakeart    (id serial, fs int, vid int, enabled int, note varchar(64), ts timestamp);",
    );
***** KUMA2.CGI
    $fakevil    => "create table fakevil    (id serial, fs int, vid int, enabled int, note varchar(64), ts timestamp);",
    );
*****

***** kuma.cgi

    my $str = "<a href=\"/$cpath$prog/$link\">$name</a>\n";
    return $str;
***** KUMA2.CGI

    my $str = "<a href=\"$script/$link\">$name</a>\n";
    return $str;
*****

***** kuma.cgi
    } else {
        $str = "<a href=\"/$cpath$prog/$link\">$name</a>\n";
    }
***** KUMA2.CGI
    } else {
        $str = "<a href=\"/$script/$link\">$name</a>\n";
    }
*****

***** kuma.cgi


    function update_player(text){
***** KUMA2.CGI

    function update_player(text){
*****

***** kuma.cgi

    # show_head();
    # if( !defined($force) && !$force && exists $cookies{"narusaid"} ){
    if( exists $cookies{"narusaid"} ){
***** KUMA2.CGI

    if( exists $cookies{"narusaid"} ){
*****

***** kuma.cgi
        }
        # print "failed 1\n";
    }
    # print "failed 2\n";

***** KUMA2.CGI
        }
    }

*****

***** kuma.cgi
    # not authed before

    # show_head("DBG: not authenticated before.");
    # print "---",$ck;
    # print "---";
    
    my $auth = $cgi->param("auth");
***** KUMA2.CGI
    # not authed before
    my $auth = $cgi->param("auth");
*****

***** kuma.cgi
  print get_menu_item("login","login");
  print "||";
  print " -- ";

***** KUMA2.CGI
  print get_menu_item("login","login");

*****

***** kuma.cgi

    print "insert_data with cont=$continue\n";
    
***** KUMA2.CGI

    # print "DBG: insert_data with cont=$continue\n";
    
*****

***** kuma.cgi

    # Top div
    print "<div>";
***** KUMA2.CGI

    #
    # Top div
    #
    print "<div>";
*****

***** kuma.cgi
    print "<td>FakeID/Rev</td><td>$id/$rev</td>";
    # print "<td>Arrival</td><td><input type=text name=arrival value=\"$arrival\"></td>";
    print "<td>Arrival</td><td>$arrival</td>";
***** KUMA2.CGI
    print "<td>FakeID/Rev</td><td>$id/$rev</td>";
    print "<td>Arrival</td><td>$arrival</td>";
*****

***** kuma.cgi
    # print "<div style=\"clear:both;\"></div>\n";
    
    # left div
    # print "<div class=fl>";

***** KUMA2.CGI
    # print "<div style=\"clear:both;\"></div>\n";

    #
    # left div
    #

*****

***** kuma.cgi

    print "<div style=\"float:left;width=10px;\"></div>";
    
    # right div
    print "<div style=\"float:left;vertical-align:top;\">";

    # show if TIMESTAMPDIFF(hour,now,arrival) > duration

    # show general villages
    print "<div>";
***** KUMA2.CGI

    print "<div style=\"float:left;width=20px;\"></div>";

    #
    # right div
    #
    print "<div style=\"float:left;vertical-align:top;\">";
    #
    # show general villages
    #
    print "<div>";
*****

***** kuma.cgi

    # show artifact villages
    print "<div>";
***** KUMA2.CGI

    # 
    # show artifact villages
    #
    print "<div>";
*****

***** kuma.cgi
    print "</div>";    # end of artifact
    print "</div>\n";  # end of left

***** KUMA2.CGI
    print "</div>";    # end of artifact
    print "</div>\n";  # end of right table

*****

***** kuma.cgi
    # bottom
    print "<div style=\"clear: both;\">";
    print "</div>\n";
}
***** KUMA2.CGI
    # bottom
    print "<div style=\"clear: both;\"></div>";
}
*****

***** kuma.cgi

    init_fakenow($db);

***** KUMA2.CGI

    # init_fakenow($db);

*****

***** kuma.cgi
    if( defined($exec) ){
        print "exec ";
        if( $exec eq $msg{set_arrival} ){
***** KUMA2.CGI
    if( defined($exec) ){
        # print "exec ";
        if( $exec eq $msg{set_arrival} ){
*****

***** kuma.cgi
            # set arrival
            print "-- set arrival -- $cid, $cfid, $crev, $carrival ";

***** KUMA2.CGI
            # set arrival
            # print "-- set arrival -- $cid, $cfid, $crev, $carrival ";

*****

***** kuma.cgi
            my $playlist = join(",", @players);
            print "-- set player -- $cid, $cfid, $crev, $carrival ";
            print "... $playlist ";
            $db->do("delete from $fakeplayer where fs = $cid;");
***** KUMA2.CGI
            my $playlist = join(",", @players);
            # print "-- set player -- $cid, $cfid, $crev, $carrival ";
            # print "... $playlist ";
            $db->do("delete from $fakeplayer where fs = $cid;");
*****

***** kuma.cgi
            foreach my $uid (@players){
                print "inserting ($cid,$uid) ";
                my $num = $db->do("insert into $fakeplayer (fs,uid) values ($cid, $uid);");
***** KUMA2.CGI
            foreach my $uid (@players){
                # print "inserting ($cid,$uid) ";
                my $num = $db->do("insert into $fakeplayer (fs,uid) values ($cid, $uid);");
*****

***** kuma.cgi
            # set village but no rev up.
            print "-- set vil -- $cid, $cfid, $crev, $carrival ";
            my @vils = $cgi->param("village");
            foreach my $vid (@vils){
                $db->do("insert into $fakevil (fs,vid) vlaues ($cid, $vid);");
            }
***** KUMA2.CGI
            # set village but no rev up.
            my @vils = $cgi->param("village");
            # print "exec -- set vil -- $cid, $cfid, $crev, $carrival -- ", join(",",@vils), "\n";
            $db->do("delete from $fakevil where fs = $cid;");
            foreach my $vid (@vils){
                my $sql = "insert into $fakevil (fs,vid) values ( $cid, $vid );";
                # print "-- $cid, $vid\n";
                $db->do($sql);
            }
*****

***** kuma.cgi
            # set fix mark
            print "-- fix -- $cid, $cfid, $crev, $carrival ";
            $db-do("update $fakenow set fix = 1 where id = $cid;");
***** KUMA2.CGI
            # set fix mark
            # print "-- fix -- $cid, $cfid, $crev, $carrival ";
            $db-do("update $fakenow set fix = 1 where id = $cid;");
*****

***** kuma.cgi
            # rev up
            print "-- save -- $cid, $cfid, $crev, $carrival ";
            # insert new fake rev
***** KUMA2.CGI
            # rev up
            # print "-- save -- $cid, $cfid, $crev, $carrival ";
            # insert new fake rev
*****

***** kuma.cgi
            $db->do("insert into $fakevil    (fs,vid) as select $fs, vid from $fakevil    where fs = $cid" );
            $db->do("insert into $fakeart    (fs,vid) as select $fs, vid from $fakeart    where fs = $cid" );

***** KUMA2.CGI
            $db->do("insert into $fakevil    (fs,vid) as select $fs, vid from $fakevil    where fs = $cid" );

*****

***** kuma.cgi
            # new fakeset
            print "-- new -- $cid, $cfid, $crev, $carrival ";
            my $nextfid = $cfid + 1;
***** KUMA2.CGI
            # new fakeset
            my $nextfid = $cfid + 1;
*****

***** kuma.cgi

    print "<form method=post action=/$script/fakelist/exec>\n";

***** KUMA2.CGI

    print "<form method=post action=\"/$script/fakelist/exec\">\n";

*****

***** kuma.cgi
    }
    print "<input type=hidden name=id value=$id>\n";
***** KUMA2.CGI
    }

    print "<input type=hidden name=id value=$id>\n";
*****

***** kuma.cgi
    print "<td>Arrival</td><td><input type=text name=arrival value=\"$arrival\"></td>";
    print "<input type=submit name=exec value=$msg{set_arrival}>";

***** KUMA2.CGI
    print "<td>Arrival</td><td><input type=text name=arrival value=\"$arrival\"></td>";
    print "<td><input type=submit name=exec value=\"$msg{set_arrival}\"></td>>";

*****

***** kuma.cgi
    print "<td>TSQ</td><td><input type=text size=5 name=tsq value=$tsq></td>";

***** KUMA2.CGI
    print "<td>TSQ</td><td><input type=text size=5 name=tsq value=$tsq></td>";
    print "<td><input type=submit name=exec value=\"$msg{set_grid}\"></td>";

*****

***** kuma.cgi
    print "<p>";
    print "<input type=submit name=exec value=$msg{new}>";
    print "<input type=submit name=exec value=$msg{save}>";
    print "<input type=submit name=exec value=$msg{fix}>";
    print "</p>";
***** KUMA2.CGI
    print "<p>";
    print "<input type=submit name=exec value=\"$msg{new}\">";
    print "<input type=submit name=exec value=\"$msg{save}\">";
    print "<input type=submit name=exec value=\"$msg{fix}\">";
    print "</p>";
*****

***** kuma.cgi
    # button
    print "<input type=submit name=exec value=$msg{set_player}>";
    # players list
***** KUMA2.CGI
    # button
    print "<p><input type=submit name=exec value=\"$msg{set_player}\"></p>";
    # players list
*****

***** kuma.cgi
    # username, checkbox
    $sql = "select l.user, concat('<input type=checkbox name=player value=', l.uid, ' ', case p.enabled when 1 then 'checked' e
lse '' end, '>') chk from last l left outer join $fakeplayer p on l.uid = p.uid and p.fs = $id where l.aid = 22 group by l.uid 
order by sum(l.population) desc;";
    my $sth = do_sql($db, $sql);
***** KUMA2.CGI
    # username, checkbox
    $sql = "select l.user, concat('<input type=checkbox name=player value=', l.uid, case p.enabled when 1 then ' checked' else 
'' end, '>') chk from last l left outer join $fakeplayer p on l.uid = p.uid and p.fs = $id where l.aid = 22 group by l.uid orde
r by sum(l.population) desc;";
    my $sth = do_sql($db, $sql);
*****

***** kuma.cgi

    print "<input type=submit name=exec value=$msg{set_village}>";

***** KUMA2.CGI

    print "<p><input type=submit name=exec value=\"$msg{set_village}\"></p>";

*****

***** kuma.cgi

    my $sql2  = " concat('<input type=checkbox name=village value=', l.vid, case v.enabled when 1 then ' checked' else '' end) 
chk ";
    $sql2    .= " from last l left outer join art a on l.x = a.x and l.y = a.y ";
***** KUMA2.CGI

    my $sql2  = " concat('<input type=checkbox name=village value=', l.vid, case v.enabled when 1 then ' checked' else '' end, 
'>') chk ";
    $sql2    .= " from last l left outer join art a on l.x = a.x and l.y = a.y ";
*****

***** kuma.cgi
       $sql3 .= " and ( (u.uid is not null ) or (v.vid is not null) )";
       $sql3 .= " order by l.uid, duration asc ;";
***** KUMA2.CGI
       $sql3 .= " and ( (u.uid is not null ) or (v.vid is not null) )";
       $sql3 .= " group by l.vid ";
       $sql3 .= " order by l.uid, duration asc ;";
*****

***** kuma.cgi

    my $q1   = "select gridlink(l.x,l.y), l.user player, l.village ";
    my $q2  .= " from last l left outer join art a on l.x = a.x and l.y = a.y ";
       $q2  .= "   left outer join $fakevil    v on v.vid = l.vid ";
#       $q2  .= "   left outer join $fakeplayer u on u.uid = l.uid and u.fs = $id ";
    my $q3  = " where l.aid = 22 ";
    # $q3 .= " and ( (u.uid is not null ) or (v.vid is not null) )";
       $q3 .= " order by l.uid limit 20;";
    
    # $sth = do_sql($db, $q1 . $q2 . $q3);
    
    show_data_table($sth);
***** KUMA2.CGI

    show_data_table($sth);
*****

***** kuma.cgi

    my $sql2a  = " concat('<input type=checkbox name=village value=', l.vid, case v.enabled when 1 then 'checked' else '' end )
 chk ";
    $sql2a    .= " from art a join last l on a.x = l.x and a.y = l.y ";
***** KUMA2.CGI

    my $sql2a  = " concat('<input type=checkbox name=village value=', l.vid, case v.enabled when 1 then ' checked' else '' end,
 '>' ) chk ";
    $sql2a    .= " from art a join last l on a.x = l.x and a.y = l.y ";
*****

***** kuma.cgi
    my $sql3a  = " where l.aid = 22 ";
    $sql3a    .= " order by l.uid, duration ;";
***** KUMA2.CGI
    my $sql3a  = " where l.aid = 22 ";
       $sql3a .= " group by l.vid ";
    $sql3a    .= " order by l.uid, duration ;";
*****

***** kuma.cgi

my($x,$y,$vel, $tsq) = (0,0,5,20);

***** KUMA2.CGI

my($x,$y,$vel, $tsq) = (0,0,3,20);

*****

***** kuma.cgi
    $y = 0    if (!defined($y)); 
    $vel = 5  if (!defined($vel));
    $tsq = 20 if (!defined($tsq));
***** KUMA2.CGI
    $y = 0    if (!defined($y)); 
    $vel = 3  if (!defined($vel));
    $tsq = 20 if (!defined($tsq));
*****

